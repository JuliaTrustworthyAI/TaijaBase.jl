var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TaijaBase","category":"page"},{"location":"#TaijaBase","page":"Home","title":"TaijaBase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TaijaBase.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TaijaBase]","category":"page"},{"location":"#TaijaBase.AbstractParallelizer","page":"Home","title":"TaijaBase.AbstractParallelizer","text":"An abstract type for parallelizers. This type is owned by the TaijaBase module to allow shipping it to packages that depend on TaijaBase, without having to depend on the TaijaParallel module. See also parallelize for a detailed explanation.\n\n\n\n\n\n","category":"type"},{"location":"#TaijaBase.parallelize-Tuple{Nothing, Function, Vararg{Any}}","page":"Home","title":"TaijaBase.parallelize","text":"parallelize(\n    parallelizer::nothing,\n    f::Function,\n    args...;\n    kwargs...,\n)\n\nIf no AbstractParallelizer has been supplied, just call or broadcast the function. \n\nNote for developers\n\nThis function is owned by the TaijaBase module to allow shipping it to packages that depend on TaijaBase, without having to depend on the TaijaParallel module. For example, in CounterfactualExplanations we rely on this function to parallelize the computation of counterfactual explanations. Unless the user explicitly provides a parallelizer, the function will just call the function f or broadcast it over the collection of arguments. There is no need to depend on TaijaParallel for this simple operation.\n\n\n\n\n\n","category":"method"}]
}
